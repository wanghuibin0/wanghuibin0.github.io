<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Hibert's blog</title><link>https://wanghuibin0.github.io/</link><description>关于 LoveIt 主题</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 07 Feb 2022 00:27:00 +0800</lastBuildDate><atom:link href="https://wanghuibin0.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>读书笔记-设计模式-行为型模式</title><link>https://wanghuibin0.github.io/posts/2022/02/design-pattern-4/</link><pubDate>Mon, 07 Feb 2022 00:27:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/design-pattern-4/</guid><description>职责链模式 场景 有多个对象可以处理同一个请求，具体是哪个对象由运行时刻自动确定 方案 能够处理请求的对象继承自同一个抽象类，运行时刻组成链状结构。</description></item><item><title>读书笔记-设计模式-结构型模式</title><link>https://wanghuibin0.github.io/posts/2022/02/design-pattern-3/</link><pubDate>Sun, 06 Feb 2022 20:54:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/design-pattern-3/</guid><description>适配器模式 场景 想使用一个已经存在的类，而它的接口不符合需求 方案 基于多重继承的 Adaptor类实现需要的接口，同时私有继承（实现继承）那个已经</description></item><item><title>读书笔记-设计模式-创建型模式</title><link>https://wanghuibin0.github.io/posts/2022/02/design-pattern-2/</link><pubDate>Sun, 06 Feb 2022 16:41:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/design-pattern-2/</guid><description>简单工厂模式 场景 创建一系列类似的产品，这些产品有差异，但属于同一类 方案 创建产品的基类，为抽象产品 一系列具体的产品继承自抽象产品 创建一个工厂类</description></item><item><title>读书笔记-设计模式-引言</title><link>https://wanghuibin0.github.io/posts/2022/02/design-pattern-1/</link><pubDate>Sun, 06 Feb 2022 09:30:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/design-pattern-1/</guid><description>什么是设计模式 特定场景下一类问题的通用解决方案。 需要说明的是，设计模式跟所使用的编程语言是很相关的。 比如，面向对象语言中的一些行为型模式在函</description></item><item><title>如何做更好的决定</title><link>https://wanghuibin0.github.io/posts/2022/02/better-decision/</link><pubDate>Sat, 05 Feb 2022 22:55:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/better-decision/</guid><description>《为什么幸运的人总幸运，倒霉的人老倒霉》读书笔记 这本小书用一个简单的故事介绍了一套做决定的方法。 故事以一个年轻人参加徒步旅行的方式展开，路上</description></item><item><title>为者常成，行者常至</title><link>https://wanghuibin0.github.io/posts/2022/01/do-and-persist/</link><pubDate>Wed, 26 Jan 2022 12:24:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/01/do-and-persist/</guid><description>梁丘据谓晏子曰：「吾至死不及夫子矣！」 晏子曰：「婴闻之，为者常成，行者常至。婴非有异于人也，常为而不置，常行而不休者，故难及也。」 —— 《晏子</description></item><item><title>赖世雄讲座笔记</title><link>https://wanghuibin0.github.io/posts/2022/01/notes-on-lectures-laishixiong/</link><pubDate>Wed, 26 Jan 2022 11:14:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/01/notes-on-lectures-laishixiong/</guid><description>学英语的三个态度 利用碎片时间 少即是多 持之以恒 （其实想做成任何事都需要这三个态度） 口语的学习方法 善用会话书（分饰角色，随时表演） 随时描述周围的</description></item><item><title>LaTeX如何将两段代码并排放置</title><link>https://wanghuibin0.github.io/posts/2022/01/latex-typeset-code-list/</link><pubDate>Fri, 21 Jan 2022 23:09:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/01/latex-typeset-code-list/</guid><description>排版一段代码用lstlisting环境（listing宏包） 将每一段代码用minipage环境包起来成为一个个box（注意设置每个minip</description></item><item><title>少则得，多则惑</title><link>https://wanghuibin0.github.io/posts/2022/01/less-is-more/</link><pubDate>Wed, 19 Jan 2022 09:06:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/01/less-is-more/</guid><description>如题。 是以圣人抱一以为天下式。</description></item><item><title>成长型思维</title><link>https://wanghuibin0.github.io/posts/2022/01/growth-mindset/</link><pubDate>Wed, 05 Jan 2022 20:09:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/01/growth-mindset/</guid><description>什么是成长型思维 概念来源于心理学家卡罗尔·德韦克的经典作品《终身成长》。 主要体现在人在面对失败/挫折时的想法 固定思维的人，会自我怀疑，容易深</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OCaml - 标签 - SimpleCoding</title><link>https://simplecoding.fun/tags/ocaml/</link><description>SimpleCoding</description><generator>Hugo 0.151.2 &amp; FixIt v0.4.0-alpha.2-20251014082535-5c74d431</generator><language>zh-CN</language><managingEditor>fighter9010@gmail.com (lazypanda)</managingEditor><webMaster>fighter9010@gmail.com (lazypanda)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 18 Feb 2025 18:15:13 +0800</lastBuildDate><atom:link href="https://simplecoding.fun/tags/ocaml/index.xml" rel="self" type="application/rss+xml"/><item><title>OCaml的PPX预处理机制解析</title><link>https://simplecoding.fun/posts/2025/02/ocaml-ppx-preprocessor/</link><pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate><author>fighter9010@gmail.com (lazypanda)</author><guid>https://simplecoding.fun/posts/2025/02/ocaml-ppx-preprocessor/</guid><category domain="https://simplecoding.fun/categories/%E6%8A%80%E6%9C%AF/">技术</category><description>&lt;p&gt;一般编程语言都具备预处理机制，用于在编译前对源代码进行转换。OCaml中存在两种预处理器机制：一种基于纯文本替换，另一种则基于抽象语法树（AST）的变换，后者便是著名的PPX预处理机制，全称为Pre-Processor eXtension。本文将深入解析PPX预处理机制的原理及其应用。&lt;/p&gt;</description></item></channel></rss>
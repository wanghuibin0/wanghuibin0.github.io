<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>软件设计 - 标签 - 子来园</title><link>https://wanghb.tk/tags/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/</link><description>软件设计 - 标签 - 子来园</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 04 Oct 2023 12:48:00 +0800</lastBuildDate><atom:link href="https://wanghb.tk/tags/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/" rel="self" type="application/rss+xml"/><item><title>关于编程范式</title><link>https://wanghb.tk/posts/2023/10/programming-paradigm/</link><pubDate>Wed, 04 Oct 2023 12:48:00 +0800</pubDate><author>hybert</author><guid>https://wanghb.tk/posts/2023/10/programming-paradigm/</guid><description>编程本质上是在对目标系统做抽象，不同的编程范式对目标系统做抽象的视角不同。 对于一个系统，命令式将之描述为一系列系统状态随时间演进的步骤；函数</description></item><item><title>读书笔记-设计模式-行为型模式</title><link>https://wanghb.tk/posts/2022/02/design-pattern-4/</link><pubDate>Mon, 07 Feb 2022 00:27:00 +0800</pubDate><author>hybert</author><guid>https://wanghb.tk/posts/2022/02/design-pattern-4/</guid><description>职责链模式 场景 有多个对象可以处理同一个请求，具体是哪个对象由运行时刻自动确定 方案 能够处理请求的对象继承自同一个抽象类，运行时刻组成链状结构。</description></item><item><title>读书笔记-设计模式-结构型模式</title><link>https://wanghb.tk/posts/2022/02/design-pattern-3/</link><pubDate>Sun, 06 Feb 2022 20:54:00 +0800</pubDate><author>hybert</author><guid>https://wanghb.tk/posts/2022/02/design-pattern-3/</guid><description>适配器模式 场景 想使用一个已经存在的类，而它的接口不符合需求 方案 基于多重继承的 Adaptor类实现需要的接口，同时私有继承（实现继承）那个已经</description></item><item><title>读书笔记-设计模式-创建型模式</title><link>https://wanghb.tk/posts/2022/02/design-pattern-2/</link><pubDate>Sun, 06 Feb 2022 16:41:00 +0800</pubDate><author>hybert</author><guid>https://wanghb.tk/posts/2022/02/design-pattern-2/</guid><description>简单工厂模式 场景 创建一系列类似的产品，这些产品有差异，但属于同一类 方案 创建产品的基类，为抽象产品 一系列具体的产品继承自抽象产品 创建一个工厂类</description></item><item><title>读书笔记-设计模式-引言</title><link>https://wanghb.tk/posts/2022/02/design-pattern-1/</link><pubDate>Sun, 06 Feb 2022 09:30:00 +0800</pubDate><author>hybert</author><guid>https://wanghb.tk/posts/2022/02/design-pattern-1/</guid><description>什么是设计模式 特定场景下一类问题的通用解决方案。 需要说明的是，设计模式跟所使用的编程语言是很相关的。 比如，面向对象语言中的一些行为型模式在函</description></item></channel></rss>
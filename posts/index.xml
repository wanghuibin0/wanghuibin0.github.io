<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Hibert's blog</title><link>https://wanghuibin0.github.io/posts/</link><description>所有文章 | Hibert's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 19 Apr 2022 16:53:00 +0800</lastBuildDate><atom:link href="https://wanghuibin0.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>程序分析简介</title><link>https://wanghuibin0.github.io/posts/2022/04/program-analysis-intro/</link><pubDate>Tue, 19 Apr 2022 16:53:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/04/program-analysis-intro/</guid><description>程序分析的目的是什么 对计算机程序进行自动化的处理,以确认或发现其特性,比如性能、正确性、安全性等. 其结果可用于编译优化、提供警告信息等,比如</description></item><item><title>为什么要控制信息源</title><link>https://wanghuibin0.github.io/posts/2022/03/information-source-control/</link><pubDate>Wed, 16 Mar 2022 10:35:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/03/information-source-control/</guid><description>就像吃饭一样,我们吃的东西会影响我们的身体健康状态.信息就好像是我们的精神食粮,我们每天都在接收处理信息,它会深刻影响我们的精神健康状态. 有</description></item><item><title>从语义的角度理解std::move</title><link>https://wanghuibin0.github.io/posts/2022/02/cpp-stdmove/</link><pubDate>Wed, 16 Feb 2022 14:30:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/cpp-stdmove/</guid><description>问题 所谓右值rvalue，表明这个对象是一个临时对象，它所拥有的资源可以随时被回收。 而对于左值，机器会保证它所拥有的资源在生存期内一直有效。</description></item><item><title>完美转发与std::forward</title><link>https://wanghuibin0.github.io/posts/2022/02/cpp-stdforward/</link><pubDate>Wed, 16 Feb 2022 14:30:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/cpp-stdforward/</guid><description>问题 一个模板函数f调用另一个函数g时，要将自己的参数转发给g，在转发过程中，有时我们想要保持被转发参数的类型不变，包括是否是const，是左</description></item><item><title>C++值分类</title><link>https://wanghuibin0.github.io/posts/2022/02/cpp-value-category/</link><pubDate>Wed, 16 Feb 2022 12:32:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/cpp-value-category/</guid><description>xvalue代表将亡值。典型的就是std::move形成的值。 参考：Value categories - cppreference.com</description></item><item><title>赖世雄是怎么做英语笔记的</title><link>https://wanghuibin0.github.io/posts/2022/02/note-taking-method-of-laishixiong/</link><pubDate>Tue, 08 Feb 2022 19:32:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/note-taking-method-of-laishixiong/</guid><description>笔记的形式 画一条竖线将一页分为左右两个区域，左小右大。与「康奈尔笔记法」有点像。 笔记的内容 左边记重点，如单词、常用短语等，右边记例句等详细信</description></item><item><title>你需要的三种笔记本</title><link>https://wanghuibin0.github.io/posts/2022/02/my-note-taking-system/</link><pubDate>Tue, 08 Feb 2022 17:23:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/my-note-taking-system/</guid><description>有这三种笔记本就够了：学习笔记本，任务管理笔记本和解决问题笔记本。其中学习笔记本侧重于知识输入，帮助知识内化在自己的头脑中，并形成一个知识库</description></item><item><title>你会解决问题吗</title><link>https://wanghuibin0.github.io/posts/2022/02/how-to-solve-problems/</link><pubDate>Tue, 08 Feb 2022 16:41:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/how-to-solve-problems/</guid><description>道理与解数学题是类似的。</description></item><item><title>做通才还是专才</title><link>https://wanghuibin0.github.io/posts/2022/02/generalist-or-specialist/</link><pubDate>Tue, 08 Feb 2022 15:04:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/generalist-or-specialist/</guid><description>有的人对很多领域都有所涉猎，博闻强识，兴趣广泛，却没有一件事情能做到顶尖水平；有的人只在一个领域深耕，兴趣单一，但对深耕的领域极为精通。 我们</description></item><item><title>如何确定事情的重要性</title><link>https://wanghuibin0.github.io/posts/2022/02/importance-estimation/</link><pubDate>Mon, 07 Feb 2022 23:47:00 +0800</pubDate><author>作者</author><guid>https://wanghuibin0.github.io/posts/2022/02/importance-estimation/</guid><description>引子 著名的任务管理四象限法，将任务按照重要性和紧急性两个维度来考量。紧急性主要与deadline有关，是比较容易判断的。但是任务的重要性，却</description></item></channel></rss>